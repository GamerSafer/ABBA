plugins {
    id "java-library"
    id "net.kyori.indra.checkstyle" version "2.1.1"
    id "xyz.jpenilla.run-paper" version "1.0.6"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group "com.github.colebennett.abbacaving"
version "0.1-ALPHA"

repositories {
    mavenCentral()
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://maven.enginehub.org/repo" }
    maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
    maven { url "https://jitpack.io" }
    maven { url "https://maven.playpro.com/" }
}

dependencies {
    checkstyle "ca.stellardrift:stylecheck:0.1"

    implementation "org.mariadb.jdbc:mariadb-java-client:3.0.6"
    implementation "com.zaxxer:HikariCP:5.0.1"
    implementation "com.github.KyoriPowered:adventure-text-feature-pagination:-SNAPSHOT"
    implementation 'commons-io:commons-io:2.11.0'

    compileOnly "io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT"
    //compileOnly "net.luckperms:api:5.4"
    compileOnly "me.clip:placeholderapi:2.9.2"
    compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.2.12"
    compileOnly "net.coreprotect:coreprotect:21.2"

//    compile fileTree(dir: "lib", include: ["*.jar"])
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
    archiveBaseName = "AbbaCaving"
    archiveVersion =  "0.1.0"
}

task fatJar(type: Jar) {
    classifier = "all"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.19.2")

        args "-XX:+AllowEnhancedClassRedefinition", "-XX:HotswapAgent=fatjar"
    }

    build {
        dependsOn(shadowJar)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}